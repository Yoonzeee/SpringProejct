<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.myspring.bookshop.mappers.AdminDAO">
	<!-- 상품 등록 -->
  	<insert id="bookEnroll">
  	
  		<!-- <selectKey resultType="int" keyProperty="bookId" order="AFTER">
  		
  			SELECT LAST_INSERT_ID()
  		
  		</selectKey> -->
  		
 		insert into book(
  						 bookName, 
  						 authorName, 
  						 publeYear, 
  						 publisher, 
  						 cateCode, 
  						 bookPrice, 
  						 bookStock, 
  						 bookDiscount, 
  						 bookIntro, 
  						 bookContents
  						 )
		values(
			   #{bookName},
			   #{authorName}, 
			   #{publeYear},
			   #{publisher},
			   #{cateCode},
			   #{bookPrice},
			   #{bookStock},
			   #{bookDiscount},
			   #{bookIntro},
			   #{bookContents}
			   )
		
  	</insert>
  	
  	
  	<select id="goodsManage" resultType="com.myspring.bookshop.entity.BookVO">
		select 
			bookId,
			bookName, 
  			authorName, 
  			publeYear, 
  		    publisher, 
  			cateCode, 
  			bookPrice, 
  			bookStock, 
  			bookDiscount, 
  			bookIntro, 
  			bookContents,
  			regDate,
  			updateDate
		from book 
	</select>

	<!-- 상품 조회 페이지 -->
	<select id="goodsGetDetail" resultType="com.myspring.bookshop.entity.BookVO">
	
		select 
				bookId,
				bookName, 
	  			authorName, 
	  			publeYear, 
	  		    publisher, 
	  			cateCode, 
	  			bookPrice, 
	  			bookStock, 
	  			bookDiscount, 
	  			bookIntro, 
	  			bookContents,
	  			regDate,
	  			updateDate
		from 	book 
		where	bookId = #{bookId}
	
	</select>
	
	<!-- 회원 목록 검색 -->
	<!-- 작가 목록 -->
      <select id="memberGetList" resultType="com.myspring.bookshop.entity.MemberVO">

        select uid, name
        from member 
        <if test="keyword != null">
            where name like concat('%',#{keyword}, '%')
        </if>
        order by uid desc 
        limit #{skip}, #{amount} 
      
      </select>
	
	<select id="goodsModify" resultType="com.myspring.bookshop.entity.BookVO">
	
		update book
		set bookName 		= 	#{bookName},
			authorName 		= 	#{authorName},
			publeYear 		= 	#{publeYear},
			publisher 		= 	#{publisher},
			bookPrice 		=	#{bookPrice},
			bookDiscount	= 	#{bookDiscount},
			bookIntro 		= 	#{bookIntro},
			bookContents 	= 	#{bookContents},
			regDate 		= 	#{regDate},
			updateDate 		= 	#{updateDate}
		where bookId = #{bookId}
			
	</select>
	
	<!-- 상품 정보 삭제 -->
	<delete id="goodsDelete"  parameterType="int">
	
		delete from book where bookId = #{bookId}
	
	</delete>
	
	<!-- 이미지 등록 -->
	<insert id="imageEnroll">
	
		insert into image(
			bookId, 
			fileName, 
			uploadPath, 
			uuid
			) 
		values(
			#{bookId}, 
			#{fileName}, 
			#{uploadPath}, 
			#{uuid}
			)
	
	</insert>

	
 </mapper>