<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
           "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myspring.bookshop.mappers.MemberDAO">
	<select id="joinMember" resultType="com.myspring.bookshop.entity.MemberVO">
		insert into member(
							uid, 
							pwd, 
							name, 
							phone, 
							email, 
							address1, 
							address2, 
							address3
							)
		values(
				#{uid}, 
				#{pwd}, 
				#{name}, 
				#{phone}, 
				#{email}, 
				#{address1}, 
				#{address2}, 
				#{address3}
				)
	</select>
	
	<select id="idCheck" resultType="int">
  		select count(*) from member where uid = #{uid}
  	</select>
  	
  	<select id="loginMember" resultType="com.myspring.bookshop.entity.MemberVO">
  		select * 
  		from member
  		where uid = #{uid} and pwd = #{pwd}
  	</select>
  	
  <!-- 	<select id="idSearch" resultType="com.myspring.bookshop.entity.MemberVO">
  		select uid
  		from member
  		where pwd = #{pwd} and email = #{email}
  	</select> -->
  	
  	<!-- <select id="pwdSearch" resultType="com.myspring.bookshop.entity.MemberVO">
  		select pwd
  		from member
  		where uid = #{uid} and email = #{email}
  	</select> -->

	<select id="selectView" resultType="com.myspring.bookshop.entity.MemberVO">
		select 
			uid,
			pwd,
			name,
			phone,
			address1,
			address2,
			address3,
			joinDate,
			available,
			admin
		from member
		where uid = #{uid}
	</select>
	
	<select id="listMembers" resultType="com.myspring.bookshop.entity.MemberVO">
		select 
			uid,
			pwd,
			name,
			phone,
			email,
			address1,
			address2,
			address3,
			joinDate
		from member
		
		<!-- select  
			uid,
			pwd,
			name,
			phone,
			email,
			address1,
			address2,
			address3,
			joinDate
        from member 
        <if test="keyword != null">
            where uid like concat('%',#{uid}, '%')
        </if>
        order by joinDate desc 
        limit #{skip}, #{amount}  -->  
		
	</select>
	
	<select id="updateMember" resultType="com.myspring.bookshop.entity.MemberVO">
		update member
		set name = #{name},
			phone = #{phone},
			email = #{email},
			address1 = #{address1},
			address2 = #{address2},
			address3 = #{address3}
		where uid = #{uid}
	</select>

	<select id="deleteMember" parameterType="String" >
		delete from member
		where uid = #{uid} and pwd = #{pwd}
	</select>
	
	<!-- 장바구니 등록 -->
	<insert id="cartEnroll">

		insert into cart(
						uid,
						bookId,
						bookName,
						authorName,
						publisher,
						bookPrice,
						bookDiscount
						) 
				 values(
						#{uid},
						#{bookId},
						#{bookName},
						#{authorName},
						#{publisher},
						#{bookPrice},
						#{bookDiscount}
						)

	</insert>
	
	<!-- 장바구니 목록 보기 -->
	<select id="cartList" resultType="com.myspring.bookshop.entity.CartVO">
		select 
				bookId,
				bookName,
				authorName,
				publisher,
				bookPrice,
				bookDiscount
		from 	cart
		where 	uid = #{uid}
	</select>
	
	<select id="findIdByPhone" resultType="string">
      
	  select uid 
	  from 	 member 
	  where  name = #{name} and phone = #{phone}
	      
	 </select>   
	
</mapper>